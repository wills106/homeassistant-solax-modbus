import logging
from dataclasses import dataclass
from homeassistant.components.number import NumberEntityDescription
from homeassistant.components.select import SelectEntityDescription
from homeassistant.components.button import ButtonEntityDescription
from pymodbus.payload import BinaryPayloadBuilder, BinaryPayloadDecoder, Endian
from custom_components.solax_modbus.const import *

_LOGGER = logging.getLogger(__name__)

""" ============================================================================================
bitmasks  definitions to characterize inverters, ogranized by group
these bitmasks are used in entitydeclarations to determine to which inverters the entity applies
within a group, the bits in an entitydeclaration will be interpreted as OR
between groups, an AND condition is applied, so all gruoups must match.
An empty group (group without active flags) evaluates to True.
example: GEN3 | GEN4 | X1 | X3 | EPS
means:  any inverter of tyoe (GEN3 or GEN4) and (X1 or X3) and (EPS)
An entity can be declared multiple times (with different bitmasks) if the parameters are different for each inverter type
"""

GEN            = 0x0001 # base generation for MIC, PV, AC
GEN2           = 0x0002
GEN3           = 0x0004
GEN4           = 0x0008
ALL_GEN_GROUP  = GEN2 | GEN3 | GEN4 | GEN

X1             = 0x0100
X3             = 0x0200
ALL_X_GROUP    = X1 | X3

PV             = 0x0400 # Needs further work on PV Only Inverters
AC             = 0x0800
HYBRID         = 0x1000
MIC            = 0x2000
ALL_TYPE_GROUP = PV | AC | HYBRID | MIC

EPS            = 0x8000
ALL_EPS_GROUP  = EPS

DCB            = 0x10000 # dry contact box - gen4
ALL_DCB_GROUP  = DCB

MPPT3          = 0x40000
MPPT4          = 0x80000
MPPT6          = 0x100000
MPPT8          = 0x200000
MPPT10         = 0x400000
ALL_MPPT_GROUP = MPPT3 | MPPT4 | MPPT6 | MPPT8 | MPPT10

ALLDEFAULT = 0 # should be equivalent to HYBRID | AC | GEN2 | GEN3 | GEN4 | X1 | X3

# ======================= end of bitmask handling code =============================================

# ====================== find inverter type and details ===========================================

async def async_read_serialnr(hub, address, swapbytes):
    res = None
    try:
        inverter_data = await hub.async_read_input_registers(unit=hub._modbus_addr, address=address, count=8)
        if not inverter_data.isError():
            decoder = BinaryPayloadDecoder.fromRegisters(inverter_data.registers, byteorder=Endian.BIG)
            res = decoder.decode_string(14).decode("ascii")
            if swapbytes:
                ba = bytearray(res,"ascii") # convert to bytearray for swapping
                ba[0::2], ba[1::2] = ba[1::2], ba[0::2] # swap bytes ourselves - due to bug in Endian.LITTLE ?
                res = str(ba, "ascii") # convert back to string
            hub.seriesnumber = res
    except Exception as ex: _LOGGER.warning(f"{hub.name}: attempt to read serialnumber failed at 0x{address:x}", exc_info=True)
    if not res: _LOGGER.warning(f"{hub.name}: reading serial number from address 0x{address:x} failed; other address may succeed")
    _LOGGER.info(f"Read {hub.name} 0x{address:x} serial number: {res}, swapped: {swapbytes}")
    return res

# =================================================================================================

@dataclass
class SolisModbusButtonEntityDescription(BaseModbusButtonEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class SolisModbusNumberEntityDescription(BaseModbusNumberEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class SolisModbusSelectEntityDescription(BaseModbusSelectEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class SolisModbusSensorEntityDescription(BaseModbusSensorEntityDescription):
    """A class that describes Solis Modbus sensor entities."""
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice
    order16: int = Endian.BIG
    order32: int = Endian.BIG
    unit: int = REGISTER_U16
    register_type: int= REG_HOLDING

# ====================================== Computed value functions  =================================================

def value_function_timingmode(initval, descr, datadict):
    return  [ ('timed_charge_start_h', datadict.get('timed_charge_start_h', 0), ),
              ('timed_charge_start_m', datadict.get('timed_charge_start_m', 0), ),
              ('timed_charge_end_h', datadict.get('timed_charge_end_h', 0), ),
              ('timed_charge_end_m', datadict.get('timed_charge_end_m', 0), ),
              ('timed_discharge_start_h', datadict.get('timed_discharge_start_h', 0), ),
              ('timed_discharge_start_m', datadict.get('timed_discharge_start_m', 0), ),
              ('timed_discharge_end_h', datadict.get('timed_discharge_end_h', 0), ),
              ('timed_discharge_end_m', datadict.get('timed_discharge_end_m', 0), ),
            ]
def value_function_timingmode2(initval, descr, datadict):
    return  [
              ('timed_charge_start_h_2', datadict.get('timed_charge_start_h_2', 0), ),
              ('timed_charge_start_m_2', datadict.get('timed_charge_start_m_2', 0), ),
              ('timed_charge_end_h_2', datadict.get('timed_charge_end_h_2', 0), ),
              ('timed_charge_end_m_2', datadict.get('timed_charge_end_m_2', 0), ),
              ('timed_discharge_start_h_2', datadict.get('timed_discharge_start_h_2', 0), ),
              ('timed_discharge_start_m_2', datadict.get('timed_discharge_start_m_2', 0), ),
              ('timed_discharge_end_h_2', datadict.get('timed_discharge_end_h_2', 0), ),
              ('timed_discharge_end_m_2', datadict.get('timed_discharge_end_m_2', 0), ),
            ]

def value_function_timingmode3(initval, descr, datadict):
    return  [
              ('timed_charge_start_h_3', datadict.get('timed_charge_start_h_3', 0), ),
              ('timed_charge_start_m_3', datadict.get('timed_charge_start_m_3', 0), ),
              ('timed_charge_end_h_3', datadict.get('timed_charge_end_h_3', 0), ),
              ('timed_charge_end_m_3', datadict.get('timed_charge_end_m_3', 0), ),
              ('timed_discharge_start_h_3', datadict.get('timed_discharge_start_h_3', 0), ),
              ('timed_discharge_start_m_3', datadict.get('timed_discharge_start_m_3', 0), ),
              ('timed_discharge_end_h_3', datadict.get('timed_discharge_end_h_3', 0), ),
              ('timed_discharge_end_m_3', datadict.get('timed_discharge_end_m_3', 0), ),
            ]

def value_function_pv1_power(initval, descr, datadict):
    return  datadict.get('pv_voltage_1', 0) * datadict.get('pv_current_1',0)

def value_function_pv2_power(initval, descr, datadict):
    return  datadict.get('pv_voltage_2', 0) * datadict.get('pv_current_2',0)

def value_function_pv3_power(initval, descr, datadict):
    return  datadict.get('pv_voltage_3', 0) * datadict.get('pv_current_3',0)

def value_function_pv4_power(initval, descr, datadict):
    return  datadict.get('pv_voltage_4', 0) * datadict.get('pv_current_4',0)

# ================================= Button Declarations ============================================================

BUTTON_TYPES = [
    SolisModbusButtonEntityDescription(
        name = "Sync RTC",
        key = "sync_rtc",
        register = 43000,
        allowedtypes = HYBRID,
        write_method = WRITE_MULTI_MODBUS,
        icon = "mdi:home-clock",
        value_function = value_function_sync_rtc_ymd,
    ),
    SolisModbusButtonEntityDescription(
        name = "Update Charge/Discharge Times",
        key = "update_charge_discharge_times",
        register = 43143,
        allowedtypes = HYBRID,
        write_method = WRITE_MULTI_MODBUS,
        icon = "mdi:battery-clock",
        value_function = value_function_timingmode,
    ),
    SolisModbusButtonEntityDescription(
        name = "Update Charge/Discharge Times 2",
        key = "update_charge_discharge_times_2",
        register = 43153,
        allowedtypes = HYBRID,
        write_method = WRITE_MULTI_MODBUS,
        icon = "mdi:battery-clock",
        value_function = value_function_timingmode2,
    ),
    SolisModbusButtonEntityDescription(
        name = "Update Charge/Discharge Times 3",
        key = "update_charge_discharge_times_3",
        register = 43163,
        allowedtypes = HYBRID,
        write_method = WRITE_MULTI_MODBUS,
        icon = "mdi:battery-clock",
        value_function = value_function_timingmode3,
    ),
]

# ================================= Number Declarations ============================================================

MAX_CURRENTS = [
    ('0602',  62.5 ), # 3kW 48v
    ('0102',  62.5 ), # 3kW 48v AC Only?
    ('110F',  62.5 ), # 3.6kW 48v
    ('160F5',  62.5 ), # 3.6kW 48v
    ('160F4',  62.5 ), # 3.6kW 48v
    ('160F3',  100 ), # 5kW 48v
    ('1031',  100 ), # 5kW 48v
    ('134F',  100 ), # 5kW 48v
    ('6031',  100 ), # 6kW 48v
    ('110C',  25 ), # 10kW HV
]

NUMBER_TYPES = [
    ###
    #
    # Data only number types
    #
    ###
    SolisModbusNumberEntityDescription(
        name = "Sync RTC Offset",
        key = "sync_rtc_offset",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = -30,
        native_max_value = 30,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.SECONDS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:home-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Start Hours",
        key = "timed_charge_start_h",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Start Minutes",
        key = "timed_charge_start_m",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge End Hours",
        key = "timed_charge_end_h",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge End Minutes",
        key = "timed_charge_end_m",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Start Hours",
        key = "timed_discharge_start_h",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Start Minutes",
        key = "timed_discharge_start_m",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge End Hours",
        key = "timed_discharge_end_h",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge End Minutes",
        key = "timed_discharge_end_m",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    ### TimeSlot2
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Start Hours 2",
        key = "timed_charge_start_h_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Start Minutes 2",
        key = "timed_charge_start_m_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge End Hours 2",
        key = "timed_charge_end_h_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge End Minutes 2",
        key = "timed_charge_end_m_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Start Hours 2",
        key = "timed_discharge_start_h_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Start Minutes 2",
        key = "timed_discharge_start_m_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge End Hours 2",
        key = "timed_discharge_end_h_2",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge End Minutes 2",
        key = "timed_discharge_end_m_2",
        fmt = "i",
        unit = REGISTER_U16,
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    ###TimeSlot3
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Start Hours 3",
        key = "timed_charge_start_h_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Start Minutes 3",
        key = "timed_charge_start_m_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge End Hours 3",
        key = "timed_charge_end_h_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge End Minutes 3",
        key = "timed_charge_end_m_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Start Hours 3",
        key = "timed_discharge_start_h_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Start Minutes 3",
        key = "timed_discharge_start_m_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge End Hours 3",
        key = "timed_discharge_end_h_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.HOURS,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge End Minutes 3",
        key = "timed_discharge_end_m_3",
        unit = REGISTER_U16,
        fmt = "i",
        initvalue = 0,
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        allowedtypes = HYBRID,
        write_method = WRITE_DATA_LOCAL,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
        prevent_update = True,
    ),
    ###
    #
    #  Normal number types
    #
    ###
    SolisModbusNumberEntityDescription(
        name = "Battery Minimum SOC",
        key = "battery_minimum_soc",
        register = 43011,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = HYBRID,
        icon = "mdi:battery-sync",
    ),
    SolisModbusNumberEntityDescription(
        name = "Force Charge SOC",
        key = "force_charge_soc",
        register = 43018,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = HYBRID,
        icon = "mdi:battery-sync",
    ),
    SolisModbusNumberEntityDescription(
        name = "Backup Mode SOC",
        key = "backup_mode_soc",
        register = 43024,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = HYBRID,
        icon = "mdi:battery-sync",
    ),
    SolisModbusNumberEntityDescription(
        name = "Backflow Power",
        key = "backflow_power",
        register = 43074,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 9900,
        native_step = 100,
        scale = 100,
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = NumberDeviceClass.POWER,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusNumberEntityDescription(
        name = "Battery ChargeDischarge Current",
        key = "battery_chargedischarge_current",
        register = 43116,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20,
        native_step = 1,
        scale = 0.1,
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = NumberDeviceClass.CURRENT,
        allowedtypes = HYBRID,
        max_exceptions = MAX_CURRENTS,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusNumberEntityDescription(
        name = "Battery Charge Current",
        key = "battery_charge_current",
        register = 43117,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20,
        native_step = 1,
        scale = 0.1,
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = NumberDeviceClass.CURRENT,
        allowedtypes = HYBRID,
        max_exceptions = MAX_CURRENTS,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusNumberEntityDescription(
        name = "Battery Discharge Current",
        key = "battery_discharge_current",
        register = 43118,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20,
        native_step = 1,
        scale = 0.1,
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = NumberDeviceClass.CURRENT,
        allowedtypes = HYBRID,
        max_exceptions = MAX_CURRENTS,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Charge Current",
        key = "timed_charge_current",
        register = 43141,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20,
        native_step = 1,
        scale = 0.1,
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = NumberDeviceClass.CURRENT,
        allowedtypes = HYBRID,
        max_exceptions = MAX_CURRENTS,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusNumberEntityDescription(
        name = "Timed Discharge Current",
        key = "timed_discharge_current",
        register = 43142,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20,
        native_step = 1,
        scale = 0.1,
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = NumberDeviceClass.CURRENT,
        allowedtypes = HYBRID,
        max_exceptions = MAX_CURRENTS,
        entity_category = EntityCategory.CONFIG,
    ),
]

# ================================= Select Declarations ============================================================

SELECT_TYPES = [
    SolisModbusSelectEntityDescription(
        name = "Backflow Power Switch",
        key = "backflow_power_switch",
        register = 43073,
        option_dict =  {
                0: "Off",
                16: "On",
            },
        allowedtypes = HYBRID | X1,
        icon = "mdi:dip-switch",
    ),
    SolisModbusSelectEntityDescription(
        name = "Backflow Power Switch",
        key = "backflow_power_switch",
        register = 43073,
        option_dict =  {
                0: "Off & Balanced output",
                16: "On & Balanced output",
                64: "Off & Unbalanced output",
                80: "On & Unbalanced output"
            },
        allowedtypes = HYBRID | X3,
        icon = "mdi:dip-switch",
    ),
    SolisModbusSelectEntityDescription(
        name = "Energy Storage Control Switch",
        key = "energy_storage_control_switch",
        register = 43110,
        option_dict =  {
                1: "Self-Use - No Grid Charging",
                3: "Timed Charge/Discharge - No Grid Charging",
                17: "Backup/Reserve - No Grid Charging",
                33: "Self-Use - No Timed Charge/Discharge",
                35: "Self-Use",
                37: "Off-Grid Mode",
                41: "Battery Awaken",
                43: "Battery Awaken + Timed Charge/Discharge",
                49: "Backup/Reserve - No Timed Charge/Discharge",
                51: "Backup/Reserve",
                64: "Feed-in priority - No Grid Charging",
                96: "Feed-in priority - No Timed Charge/Discharge",
                98: "Feed-in priority",
            },
        allowedtypes = HYBRID,
        icon = "mdi:dip-switch",
    ),
    SolisModbusSelectEntityDescription(
        name = "Power Switch",
        key = "power_switch",
        register = 43007,
        option_dict =  {
                190: "On",
                222: "Off",
            },
        allowedtypes = HYBRID,
        icon = "mdi:dip-switch",
    ),
]

# ================================= Sennsor Declarations ============================================================

SENSOR_TYPES: list[SolisModbusSensorEntityDescription] = [

    #SolisModbusSensorEntityDescription(
    #    name = "Serial Number",
    #    key = "serialnumber",
    #    register = 33004,
    #    ignore_readerror = True,
    #    register_type = REG_INPUT,
    #    unit = REGISTER_STR,
    #    wordcount=8,
    #    entity_registry_enabled_default = False,
    #    sleepmode = SLEEPMODE_LASTAWAKE,
    #    allowedtypes = HYBRID,
    #    entity_category = EntityCategory.DIAGNOSTIC,
    #    icon = "mdi:information",
    #),
    SolisModbusSensorEntityDescription(
        name = "RTC",
        key = "rtc",
        register = 33022,
        ignore_readerror = True,
        register_type = REG_INPUT,
        unit = REGISTER_WORDS,
        wordcount = 6,
        scale = value_function_rtc_ymd,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon = "mdi:clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation Total",
        key = "power_generation_total",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33029,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation This Month",
        key = "power_generation_this_month",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33031,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation Last Month",
        key = "power_generation_last_month",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33033,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation Today",
        key = "power_generation_today",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33035,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation Yesterday",
        key = "power_generation_yesterday",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33036,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation This Year",
        key = "power_generation_this_year",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33037,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Generation Last Year",
        key = "power_generation_last_year",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        icon = "mdi:solar-power",
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33039,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Voltage 1",
        key = "pv_voltage_1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33049,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Current 1",
        key = "pv_current_1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33050,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
        icon = "mdi:current-dc",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Power 1",
        key = "pv_power_1",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        value_function = value_function_pv1_power,
        allowedtypes = HYBRID,
        icon = "mdi:solar-power-variant",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Voltage 2",
        key = "pv_voltage_2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33051,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Current 2",
        key = "pv_current_2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33052,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
        icon = "mdi:current-dc",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Power 2",
        key = "pv_power_2",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        value_function = value_function_pv2_power,
        allowedtypes = HYBRID,
        icon = "mdi:solar-power-variant",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Voltage 3",
        key = "pv_voltage_3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33053,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        #entity_registry_enabled_default = False,
        allowedtypes = HYBRID | ALL_MPPT_GROUP,
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Current 3",
        key = "pv_current_3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33054,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        #entity_registry_enabled_default = False,
        allowedtypes = HYBRID | ALL_MPPT_GROUP,
        icon = "mdi:current-dc",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Power 3",
        key = "pv_power_3",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        value_function = value_function_pv3_power,
        allowedtypes = HYBRID | ALL_MPPT_GROUP,
        icon = "mdi:solar-power-variant",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Voltage 4",
        key = "pv_voltage_4",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33055,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        #entity_registry_enabled_default = False,
        allowedtypes = HYBRID | MPPT4,
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Current 4",
        key = "pv_current_4",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33056,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        #entity_registry_enabled_default = False,
        allowedtypes = HYBRID | MPPT4,
        icon = "mdi:current-dc",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Power 4",
        key = "pv_power_4",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        value_function = value_function_pv4_power,
        allowedtypes = HYBRID | MPPT4,
        icon = "mdi:solar-power-variant",
    ),
    SolisModbusSensorEntityDescription(
        name = "PV Total Power",
        key = "pv_total_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33057,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = HYBRID,
        icon = "mdi:solar-power-variant",
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Voltage",
        key = "inverter_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33073,
        scale = 0.1,
        register_type = REG_INPUT,
        rounding = 1,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Voltage L1",
        key = "grid_voltage_l1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33073,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Voltage L2",
        key = "grid_voltage_l2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33074,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Voltage L3",
        key = "grid_voltage_l3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33075,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Current",
        key = "inverter_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33076,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Current L1",
        key = "grid_current_l1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33076,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Current L2",
        key = "grid_current_l2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33077,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Current L3",
        key = "grid_current_l3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33078,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Active Power",
        key = "active_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33079,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Reactive Power",
        key = "reactive_power",
        native_unit_of_measurement = POWER_VOLT_AMPERE_REACTIVE,
        device_class = SensorDeviceClass.REACTIVE_POWER,
        register = 33081,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Apparent Power",
        key = "apparent_power",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        register = 33083,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Temperature",
        key = "inverter_temperature",
        native_unit_of_measurement = UnitOfTemperature.CELSIUS,
        device_class = SensorDeviceClass.TEMPERATURE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33093,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Frequency",
        key = "grid_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        device_class = SensorDeviceClass.FREQUENCY,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33094,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Inverter Status",
        key = "inverter_status",
        register = 33095,
        register_type = REG_INPUT,
        scale = {
                0: "Waiting",
                1: "Open Operating",
                2: "Soft Run",
                3: "Generating",
                4: "Bypass Inverter Running",
                5: "Bypass Inverter Sync",
                6: "Bypass Grid Running",
                15: "Normal Running",
                4100: "Grid Off",
                61456: "Grid Surge",
                61457: "Fan Fault",
                4112: "Grid Overvoltage",
                4113: "Grid Undervoltage",
                4114: "Grid Overfrequency",
                4115: "Grid Underfrequency",
                4116: "Grid Reverse Current",
                4117: "No-Grid",
                4118: "Grid Unbalanced",
                4119: "Grid Frequency Fluctuation",
                4120: "Grid Overcurrent",
                4121: "Grid Current Sampling Error",
                4128: "DC Overvoltage",
                4129: "DC Bus Overvoltage",
                4130: "DC Bus Unbalanced",
                4131: "DC Bus Undervoltage",
                4132: "DC Bus Unbalanced 2",
                4133: "DC(Channel A) Overcurrent",
                4134: "DC(Channel B) Overcurrent",
                4135: "DC Interference",
                4136: "DC Reverse",
                4137: "PV Midpoint Grounding",
                4144: "Grid Interference Protection",
                4145: "DSP Inital Protection",
                4146: "Over Temperature Protection",
                4147: "PV Insulation Fault",
                4148: "Leakage Current Protection",
                4149: "Relay Check Protection",
                4150: "DSP_B Protection",
                4151: "DC Injection Protection",
                4152: "12V Undervoltage Faulty",
                4153: "Leakage Current Check Protection",
                4154: "Under Temperature Protection",
                4160: "AFCI Check Fault",
                4161: "AFCI Fault",
                4162: "DSP Chip SRAM Fault",
                4163: "DSP Chip FLASH Fault",
                4164: "DSP Chip PC Pointer Fault",
                4165: "DSP Chip Register Fault",
                4166: "Grid Interference Protection 02",
                4167: "Grid Current Sampling Error",
                4168: "IGBT Overcurrent",
                4176: "Grid Transient Overcurrent",
                4177: "Battery Hardware Overvoltage fault",
                4178: "LLC Hardware Overcurrent",
                4179: "Battery Overvoltage",
                4180: "Battery Undervoltage",
                4181: "Battery Not Connected",
                4182: "Backup Overvoltage",
                4183: "Backup Overload",
                4184: "DSP Selfcheck Error",
                8208: "Fail Safe",
                8209: "Meter COM Fail",
                8210: "Battery COM Fail",
                8212: "DSP COM Fail",
                8213: "BMS Alarm",
                8214: "BatName-FAIL",
                8215: "BMS Alarm 2",
                8216: "DRM Connect Fail",
                8217: "Meter Select Fail",
                8224: "Lead-acid Battery High Temp",
                8225: "Lead-acid Battery Low Temp",
                },
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Total ActivePower",
        key = "meter_total_activepower",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        register = 33126,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Voltage",
        key = "meter_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33128,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Current",
        key = "meter_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33129,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Active Power",
        key = "meter_active_power",
        state_class = SensorStateClass.MEASUREMENT,
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        register = 33130,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Energy Storage Control Switch",
        key = "energy_storage_control_switch",
        register = 33132,
        register_type = REG_INPUT,
        scale = {
                1: "Self-Use - No Grid Charging",
                3: "Timed Charge/Discharge - No Grid Charging",
                17: "Backup/Reserve - No Grid Charging",
                33: "Self-Use - No Timed Charge/Discharge",
                35: "Self-Use",
                37: "Off-Grid Mode",
                41: "Battery Awaken",
                43: "Battery Awaken + Timed Charge/Discharge",
                49: "Backup/Reserve - No Timed Charge/Discharge",
                51: "Backup/Reserve",
                64: "Feed-in priority - No Grid Charging",
                96: "Feed-in priority - No Timed Charge/Discharge",
                98: "Feed-in priority",
                },
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Energy Storage Control",
        key = "energy_storage_control",
        register = 33132,
        unit = REGISTER_U16,
        register_type = REG_INPUT,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Voltage",
        key = "battery_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33133,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Current",
        key = "battery_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33134,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Charge Direction",
        key = "battery_charge_direction",
        register = 33135,
        register_type = REG_INPUT,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery SOC",
        key = "battery_soc",
        native_unit_of_measurement = PERCENTAGE,
        device_class = SensorDeviceClass.BATTERY,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33139,
        register_type = REG_INPUT,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery SOH",
        key = "battery_soh",
        native_unit_of_measurement = PERCENTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33140,
        register_type = REG_INPUT,
        allowedtypes = HYBRID,
        icon = "mdi:battery-heart",
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolisModbusSensorEntityDescription(
        name = "BMS Battery Voltage",
        key = "bms_battery_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33141,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "BMS Battery Current",
        key = "bms_battery_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33142,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 2,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "BMS Battery Charge Limit",
        key = "bms_battery_charge_limit",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33143,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "BMS Battery Discharge Limit",
        key = "bms_battery_discharge_limit",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33144,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "House Load",
        key = "house_load",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33147,
        register_type = REG_INPUT,
        allowedtypes = HYBRID,
        icon = "mdi:home",
    ),
    SolisModbusSensorEntityDescription(
        name = "Bypass Load",
        key = "bypass_load",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33148,
        register_type = REG_INPUT,
        allowedtypes = HYBRID,
        icon = "mdi:home",
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Power",
        key = "battery_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33149,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        icon = "mdi:home",
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Input Energy",
        key = "battery_input_energy",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        value_function = value_function_battery_input_solis,
        allowedtypes = HYBRID,
        icon = "mdi:battery-arrow-up",
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Output Energy",
        key = "battery_output_energy",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        value_function = value_function_battery_output_solis,
        allowedtypes = HYBRID,
        icon = "mdi:battery-arrow-down",
    ),
    SolisModbusSensorEntityDescription(
        name = "Total Battery Charge",
        key = "total_battery_charge",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        register = 33161,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Charge Today",
        key = "battery_charge_today",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33163,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Charge Yesterday",
        key = "battery_charge_yesterday",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        register = 33164,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Total Battery Discharge",
        key = "total_battery_discharge",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        register = 33165,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Discharge Today",
        key = "battery_discharge_today",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33167,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Discharge Yesterday",
        key = "battery_discharge_yesterday",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        register = 33168,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Grid Import Total",
        key = "grid_import_total",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33169,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        entity_registry_enabled_default = False,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-import-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Grid Import Today",
        key = "grid_import_today",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33171,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-import-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Grid Import Yesterday",
        key = "grid_import_yesterday",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33172,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default = False,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-import-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Grid Export Total",
        key = "grid_export_total",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33173,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        entity_registry_enabled_default = False,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-export-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Grid Export Today",
        key = "grid_export_today",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33175,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-export-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Grid Export Yesterday",
        key = "grid_export_yesterday",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33176,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default = False,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-export-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "House Load Total",
        key = "house_load_total",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33177,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home",
    ),
    SolisModbusSensorEntityDescription(
        name = "House Load Today",
        key = "house_load_today",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33179,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home",
    ),
    SolisModbusSensorEntityDescription(
        name = "House Load Yesterday",
        key = "house_load_yesterday",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33180,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home",
    ),
     SolisModbusSensorEntityDescription(
        name = "Battery Charge Current Limit",
        key = "battery_charge_current_limit",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33206,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X1,
    ),
     SolisModbusSensorEntityDescription(
        name = "Battery Discharge Current Limit",
        key = "battery_discharge_current_limit",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33207,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Voltage",
        key = "meter_ac_voltage",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33251,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Current",
        key = "meter_ac_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33252,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Voltage L1",
        key = "meter_ac_voltage_l1",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33251,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Current L1",
        key = "meter_ac_current_l1",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33252,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Voltage L2",
        key = "meter_ac_voltage_l2",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33253,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Current L2",
        key = "meter_ac_current_l2",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33254,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Voltage L3",
        key = "meter_ac_voltage_l3",
        native_unit_of_measurement = UnitOfElectricPotential.VOLT,
        device_class = SensorDeviceClass.VOLTAGE,
        register = 33255,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter AC Current L3",
        key = "meter_ac_current_l3",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        register = 33256,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Active Power L1",
        key = "meter_active_power_l1",
        native_unit_of_measurement = UnitOfPower.KILO_WATT,
        device_class = SensorDeviceClass.POWER,
        register = 33257,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.001,
        rounding = 3,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Active Power L2",
        key = "meter_active_power_l2",
        native_unit_of_measurement = UnitOfPower.KILO_WATT,
        device_class = SensorDeviceClass.POWER,
        register = 33259,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.001,
        rounding = 3,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Active Power L3",
        key = "meter_active_power_l3",
        native_unit_of_measurement = UnitOfPower.KILO_WATT,
        device_class = SensorDeviceClass.POWER,
        register = 33261,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.001,
        rounding = 3,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Active Power Total",
        key = "meter_activepower_total",
        native_unit_of_measurement = UnitOfPower.KILO_WATT,
        device_class = SensorDeviceClass.POWER,
        register = 33263,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.001,
        rounding = 3,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Reactive Power",
        key = "meter_reactive_power",
        native_unit_of_measurement = POWER_VOLT_AMPERE_REACTIVE,
        device_class = SensorDeviceClass.REACTIVE_POWER,
        register = 33265,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Reactive Power L1",
        key = "meter_reactive_power_l1",
        native_unit_of_measurement = POWER_VOLT_AMPERE_REACTIVE,
        device_class = SensorDeviceClass.REACTIVE_POWER,
        register = 33265,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Reactive Power L2",
        key = "meter_reactive_power_l2",
        native_unit_of_measurement = POWER_VOLT_AMPERE_REACTIVE,
        device_class = SensorDeviceClass.REACTIVE_POWER,
        register = 33267,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Reactive Power L3",
        key = "meter_reactive_power_l3",
        native_unit_of_measurement = POWER_VOLT_AMPERE_REACTIVE,
        device_class = SensorDeviceClass.REACTIVE_POWER,
        register = 33269,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Reactive Power Total",
        key = "meter_reactive_power_total",
        native_unit_of_measurement = POWER_VOLT_AMPERE_REACTIVE,
        device_class = SensorDeviceClass.REACTIVE_POWER,
        register = 33271,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Apparent Power",
        key = "meter_apparent_power",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        register = 33273,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Apparent Power L1",
        key = "meter_apparent_power_l1",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        register = 33273,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Apparent Power L2",
        key = "meter_apparent_power_L2",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        register = 33275,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Apparent Power L3",
        key = "meter_apparent_power_l3",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        register = 33277,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Apparent Power Total",
        key = "meter_apparent_power_total",
        native_unit_of_measurement = UnitOfApparentPower.VOLT_AMPERE,
        device_class = SensorDeviceClass.APPARENT_POWER,
        register = 33279,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Power Factor",
        key = "meter_power_factor",
        native_unit_of_measurement = None,
        device_class = SensorDeviceClass.POWER_FACTOR,
        state_class = SensorStateClass.MEASUREMENT,
        register = 33281,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes = HYBRID,
        scale = 0.01,
        rounding = 2,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Grid Frequency",
        key = "meter_grid_frequency",
        native_unit_of_measurement = UnitOfFrequency.HERTZ,
        device_class = SensorDeviceClass.FREQUENCY,
        register = 33282,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Grid Import Total",
        key = "meter_grid_import_total",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33283,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.01,
        rounding = 2,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-import-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Meter Grid Export Total",
        key = "meter_grid_export_total",
        native_unit_of_measurement = UnitOfEnergy.KILO_WATT_HOUR,
        device_class = SensorDeviceClass.ENERGY,
        state_class = SensorStateClass.TOTAL_INCREASING,
        register = 33285,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.01,
        rounding = 2,
        sleepmode = SLEEPMODE_LASTAWAKE,
        allowedtypes = HYBRID,
        icon = "mdi:home-export-outline",
    ),
    SolisModbusSensorEntityDescription(
        name = "Power Switch",
        key = "power_switch",
        register = 43007,
        scale = {
                190: "On",
                222: "Off", },
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Minimum SOC",
        key = "battery_minimum_soc",
        register = 43011,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        icon = "mdi:battery-sync",
    ),
    SolisModbusSensorEntityDescription(
        name = "Force Charge SOC",
        key = "force_charge_soc",
        register = 43018,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        icon = "mdi:battery-sync",
    ),
    SolisModbusSensorEntityDescription(
        name = "Backup Mode SOC",
        key = "backup_mode_soc",
        register = 43024,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        icon = "mdi:battery-sync",
    ),
    SolisModbusSensorEntityDescription(
        name = "Backflow Power Switch",
        key = "backflow_power_switch",
        register = 43073,
        scale = {
                0: "Off",
                16: "On",
            },
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID | X1,
    ),
    SolisModbusSensorEntityDescription(
        name = "Backflow Power Switch",
        key = "backflow_power_switch",
        register = 43073,
        scale =  {
                0: "Off & Balanced output",
                16: "On & Balanced output",
                64: "Off & Unbalanced output",
                80: "On & Unbalanced output"
            },
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID | X3,
    ),
    SolisModbusSensorEntityDescription(
        name = "Backflow Power",
        key = "backflow_power",
        native_unit_of_measurement = UnitOfPower.WATT,
        device_class = SensorDeviceClass.POWER,
        state_class = SensorStateClass.MEASUREMENT,
        register = 43074,
        scale = 100,
        rounding = 0,
        allowedtypes = HYBRID,
        entity_registry_enabled_default = False,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery ChargeDischarge Current",
        key = "battery_chargedischarge_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 43116,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Charge Current",
        key = "battery_charge_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 43117,
        scale = 0.1,
        rounding = 1,
        allowedtypes = HYBRID,
        entity_registry_enabled_default = False,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusSensorEntityDescription(
        name = "Battery Discharge Current",
        key = "battery_discharge_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 43118,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Current",
        key = "timed_charge_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 43141,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Current",
        key = "timed_discharge_current",
        native_unit_of_measurement = UnitOfElectricCurrent.AMPERE,
        device_class = SensorDeviceClass.CURRENT,
        state_class = SensorStateClass.MEASUREMENT,
        register = 43142,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Start Hours",
        key = "timed_charge_start_h",
        register = 43143,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes =HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Start Minutes",
        key = "timed_charge_start_m",
        register = 43144,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge End Hours",
        key = "timed_charge_end_h",
        register = 43145,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge End Minutes",
        key = "timed_charge_end_m",
        register = 43146,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Start Hours",
        key = "timed_discharge_start_h",
        register = 43147,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes =HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Start Minutes",
        key = "timed_discharge_start_m",
        register = 43148,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge End Hours",
        key = "timed_discharge_end_h",
        register = 43149,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge End Minutes",
        key = "timed_discharge_end_m",
        register = 43150,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    # ============================ TimeSlot2 ==============================
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Start Hours 2",
        key = "timed_charge_start_h_2",
        register = 43153,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes =HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Start Minutes 2",
        key = "timed_charge_start_m_2",
        register = 43154,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge End Hours 2",
        key = "timed_charge_end_h_2",
        register = 43155,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge End Minutes 2",
        key = "timed_charge_end_m_2",
        register = 43156,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Start Hours 2",
        key = "timed_discharge_start_h_2",
        register = 43157,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes =HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Start Minutes 2",
        key = "timed_discharge_start_m_2",
        register = 43158,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge End Hours 2",
        key = "timed_discharge_end_h_2",
        register = 43159,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge End Minutes 2",
        key = "timed_discharge_end_m_2",
        register = 43160,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    # ============================ TimeSlot3 ==============================
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Start Hours 3",
        key = "timed_charge_start_h_3",
        register = 43163,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes =HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge Start Minutes 3",
        key = "timed_charge_start_m_3",
        register = 43164,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge End Hours 3",
        key = "timed_charge_end_h_3",
        register = 43165,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Charge End Minutes 3",
        key = "timed_charge_end_m_3",
        register = 43166,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Start Hours 3",
        key = "timed_discharge_start_h_3",
        register = 43167,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes =HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge Start Minutes 3",
        key = "timed_discharge_start_m_3",
        register = 43168,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge End Hours 3",
        key = "timed_discharge_end_h_3",
        register = 43169,
        native_unit_of_measurement = UnitOfTime.HOURS,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
    SolisModbusSensorEntityDescription(
        name = "Timed Discharge End Minutes 3",
        key = "timed_discharge_end_m_3",
        register = 43170,
        native_unit_of_measurement = UnitOfTime.MINUTES,
        entity_registry_enabled_default = False,
        allowedtypes = HYBRID,
        entity_category = EntityCategory.CONFIG,
        icon = "mdi:battery-clock",
    ),
]

# ============================ plugin declaration =================================================

@dataclass
class solis_plugin(plugin_base):

    async def async_determineInverterType(self, hub, configdict):
        _LOGGER.info(f"{hub.name}: trying to determine inverter type")
        seriesnumber                       = await async_read_serialnr(hub, 33004,  swapbytes = False)
        if not seriesnumber:
            _LOGGER.error(f"{hub.name}: cannot find serial number, even not for other Inverter")
            seriesnumber = "unknown"

        # derive invertertype from seriiesnumber
        if seriesnumber.startswith('1801'):  invertertype = HYBRID | X1 # PV Only S6-GR1P 1-3K
        elif seriesnumber.startswith('1802'):  invertertype = HYBRID | X1 # PV Only S6-GR1P 2.5-6K
        elif seriesnumber.startswith('0602'):  invertertype = HYBRID | X1 # Hybrid Gen5 3kW - 48v
        elif seriesnumber.startswith('0102'):  invertertype = HYBRID | X1 # AC? Gen5 3kW - 48v
        elif seriesnumber.startswith('010F'):  invertertype = HYBRID | X1 # Hybrid Gen5 3kW - 48v
        elif seriesnumber.startswith('110F'):  invertertype = HYBRID | X1 # Hybrid Gen5 5kW - 48v
        elif seriesnumber.startswith('114F'):  invertertype = HYBRID | X1 # Hybrid Gen5 6K - 48V
        elif seriesnumber.startswith('134F'):  invertertype = HYBRID | X1 # Hybrid Gen5 5kW - 48V
        elif seriesnumber.startswith('140C'):  invertertype = HYBRID | X1 # Hybrid Gen5 5kW - HV
        elif seriesnumber.startswith('143'):  invertertype = HYBRID | X1 # Hybrid Gen5 5kW - 48V
        elif seriesnumber.startswith('160F5'):  invertertype = HYBRID | X1 # Hybrid Gen5 3.6kW - 48v
        elif seriesnumber.startswith('160F4'):  invertertype = HYBRID | X1 # Hybrid Gen5 3.6kW - 48v
        elif seriesnumber.startswith('160F3'):  invertertype = HYBRID | X1 # Hybrid Gen5 5kW - 48v
        elif seriesnumber.startswith('1033'):  invertertype = HYBRID | X3 # Hybrid Gen6  10kW - HV
        elif seriesnumber.startswith('110C'):  invertertype = HYBRID | X3 # Hybrid Gen5 0CA2 / 0C92 10kW - HV
        elif seriesnumber.startswith('114C'):  invertertype = HYBRID | X3 # Hybrid Gen5 10kW - HV
        elif seriesnumber.startswith('1805'):  invertertype = HYBRID | X3 # PV Only Gen5 5-20kW
        elif seriesnumber.startswith('6031'):  invertertype = HYBRID | X1 # Hybrid Gen5 3105 / 3122 Model 6kW - 48V
        elif seriesnumber.startswith('1031'):  invertertype = HYBRID | X1 # Hybrid Gen5 3104 Model 5kW - 48V
        #elif seriesnumber.startswith('abc123'):  invertertype = PV | X3 # Comment

        else:
            invertertype = 0
            _LOGGER.error(f"unrecognized {hub.name} inverter type - serial number : {seriesnumber}")

        if invertertype > 0:
            read_eps = configdict.get(CONF_READ_EPS, DEFAULT_READ_EPS)
            read_dcb = configdict.get(CONF_READ_DCB, DEFAULT_READ_DCB)
            if read_eps: invertertype = invertertype | EPS
            if read_dcb: invertertype = invertertype | DCB

        return invertertype

    def matchInverterWithMask (self, inverterspec, entitymask, serialnumber = 'not relevant', blacklist = None):
        # returns true if the entity needs to be created for an inverter
        genmatch = ((inverterspec & entitymask & ALL_GEN_GROUP)  != 0) or (entitymask & ALL_GEN_GROUP  == 0)
        xmatch   = ((inverterspec & entitymask & ALL_X_GROUP)    != 0) or (entitymask & ALL_X_GROUP    == 0)
        hybmatch = ((inverterspec & entitymask & ALL_TYPE_GROUP) != 0) or (entitymask & ALL_TYPE_GROUP == 0)
        epsmatch = ((inverterspec & entitymask & ALL_EPS_GROUP)  != 0) or (entitymask & ALL_EPS_GROUP  == 0)
        dcbmatch = ((inverterspec & entitymask & ALL_DCB_GROUP)  != 0) or (entitymask & ALL_DCB_GROUP  == 0)
        mpptmatch = ((inverterspec & entitymask & ALL_MPPT_GROUP)  != 0) or (entitymask & ALL_MPPT_GROUP  == 0)
        blacklisted = False
        if blacklist:
            for start in blacklist:
                if serialnumber.startswith(start) : blacklisted = True
        return (genmatch and xmatch and hybmatch and epsmatch and dcbmatch and mpptmatch) and not blacklisted


plugin_instance = solis_plugin(
    plugin_name = 'Solis',
    plugin_manufacturer = 'Ginlog Solis',
    SENSOR_TYPES = SENSOR_TYPES,
    NUMBER_TYPES = NUMBER_TYPES,
    BUTTON_TYPES = BUTTON_TYPES,
    SELECT_TYPES = SELECT_TYPES,
    block_size = 40,
    order16 = Endian.BIG,
    order32 = Endian.BIG,
    auto_block_ignore_readerror = True
    )
